### This file is downloaded from https://github.com/vimotest/mps-gradle-scripts/raw/main/.github/workflows/workflow-build.yaml

name: Build

on:
  workflow_call:

env:
  PROJECT_NAME: "mps-vimotest"
  ARTIFACT_NAME: "mps-vimotest"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Install Xvfb for avoiding X11 window server AWTError when running tests (https://arbitrary-but-fixed.net/2022/01/21/headless-gui-github-actions.html)
      - name: Setup xvfb for X11 window server
        run: Xvfb :1 -screen 0 1600x1200x24 &

      # Prepare MPS
      - name: Download and Prepare MPS
        run: sh ./gradlew prepareMps

      # Clean Project (source_gen of VCS)
      - name: Clean Project
        run: sh ./gradlew mpsClean

      # Build Project
      - name: Build Project
        run: sh ./gradlew mpsBuild

      # Test Project
      - name: Test Project
        run: sh ./gradlew mpsTest
        env:
          DISPLAY: :1

      # Stop Xvfb
      - name: Tear down xvfb
        run: killall Xvfb

      # Build and Test taskview example
      # Note: while we test Sandbox separately, we test TaskView Example here to avoid archiving and use freshly generated files
      # TODO: disabled due to breaking generation changes
      - name: Build TaskView Example
        if: false
        run: sh ./gradlew build
        working-directory: submodules/mps-vimotest-samples/taskmanager

      # Archive Artifacts
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/artifacts/${{ env.PROJECT_NAME }}/${{ env.ARTIFACT_NAME }}.zip

      # Archive Code
      - name: Package Sandbox Code
        run: sh ./gradlew packageGeneratedCode
      - name: Archive Sandbox Code
        uses: actions/upload-artifact@v4
        with:
          name: vimotest-sandbox-code
          path: build/code-gen

      # Archive Plugins
      - name: Extract ViMoTest Plugin Artifact
        run: |
          unzip build/artifacts/${{ env.PROJECT_NAME }}/${{ env.ARTIFACT_NAME }}.zip -d build/mps-bundle/dependencies
          cd build/mps-bundle/dependencies
          for dir in *; do
              zip -r $dir.zip $dir
          done
          cd -
      - name: Archive ViMoTest All Plugins
        uses: actions/upload-artifact@v4
        with:
          name: vimotest-plugins-all
          path: build/mps-bundle/dependencies

  buildAndTestSandboxJavaCode:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download Sandbox Code
        uses: actions/download-artifact@v4
        with:
          name: vimotest-sandbox-code
          path: build/code-gen

      # Build Java Programs
      - name: Build Java Sandbox
        run: sh ./gradlew buildJavaSandboxProject

  buildCpp:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/checkout@v4

      - name: Download Sandbox Code
        uses: actions/download-artifact@v4
        with:
          name: vimotest-sandbox-code
          path: build/code-gen

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2.0.2
        with:
          cmake-version: '3.29.x'

      - name: Verify CMake installation
        run: which cmake

      - name: Set CMAKE_PATH environment variable
        run: echo "CMAKE_PATH=$(which cmake)" >> $GITHUB_ENV

      # Build C++ Programs
      - name: Build C++ Sandbox
        run: sh ./gradlew buildCppSandboxProject

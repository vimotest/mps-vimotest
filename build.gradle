ext.mpsVersion = "2024.1.1"
ext.languageName = "vimotest"

ext.mpsPlugins = [ ]

ext.customMpsPlugins = [
    "alfi": "https://github.com/vimotest/mps-alfi/releases/download/1.1.3/alfi.zip",
    "CppBaseLanguage": "https://github.com/Fumapps/CppBaseLanguage/releases/download/2024.1.2/CppBaseLanguage.zip"
]

apply from: 'gradle/init-gradle-scripts.gradle'
apply from: 'gradle/sandbox/make-project-sandbox.gradle'
apply from: 'gradle/sandbox/package-generated-code.gradle'

task prepareMps {
    group 'mps'
    dependsOn 'buildOsSpecificBundle'
    doLast {
        def os = System.getProperty("os.name").toLowerCase()
        if (os.contains("mac") && !file("$buildDir/mps-bundle/mps").exists()) {
            println "Creating a symbolic link to the MPS bundle"
            exec {
                commandLine = ["ln", "-s", "$buildDir/mps-bundle/Contents", "$buildDir/mps-bundle/mps"]
            }
        }
    }
}

task mpsBuild {
    group 'mps'
    dependsOn 'mpsAntGenerate', 'mpsAntBuild'
}

task mpsClean {
    group 'mps'
    dependsOn 'mpsAntClean', 'mpsAntCleanSources'
}

task mpsTest {
    group 'mps'
    dependsOn 'mpsAntCheck', 'parseTestReportAfterAntCheck'
}

task openProjectInMps {
    group 'mps'
    dependsOn 'mpsOpenProjectInMpsForCurrentOs'
}

task buildAndOpenProjectInMps {
    group 'mps'
    dependsOn mpsBuild, openProjectInMps
}

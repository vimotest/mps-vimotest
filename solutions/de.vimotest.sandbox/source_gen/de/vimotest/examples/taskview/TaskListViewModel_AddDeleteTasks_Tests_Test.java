package de.vimotest.examples.taskview;

/*Generated by MPS */

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import java.util.List;
import org.junit.Assert;

public class TaskListViewModel_AddDeleteTasks_Tests_Test {
  private TaskListViewModel sut;
  private TaskListViewModelContextProvider contextProvider;
  private String oneTask = "[ { id:\"0\", name:\"A\", priority:\"low\", dueDate:\"2024/12/01\" } ]";
  private String threeTasks = "[ { id:\"0\", name:\"A\" },\n  { id:\"1\", name:\"B\" },\n  { id:\"2\", name:\"C\" } ]";
  private String emptyTasks = "[ { id:\"0\", name:\"Task A\", dueDate:\"2023/01/01\" } ]";
  @Test
  public void test_Add_New_Task_given_oneTask_when_LoadView_and_click_AddNewTask_then_Tasks_has_2_rows_and_selected_row_handle_1() throws Exception {
    this.given_oneTask();
    this.BuildSut();
    this.when_LoadView();
    this.when_click_AddNewTask();
    this.then_Tasks_has_2_rows_and_selected_row_handle_1();
  }
  @Test
  public void test_Delete_Task_given_threeTasks_when_LoadView_and_select_row_0_in_Tasks_and_click_DeleteTask_then_Tasks_has_2_rows_and_selected_row_handle_1() throws Exception {
    this.given_threeTasks();
    this.BuildSut();
    this.when_LoadView_1();
    this.when_select_row_0_in_Tasks();
    this.when_click_DeleteTask();
    this.then_Tasks_has_2_rows_and_selected_row_handle_1_1();
  }
  @Test
  public void test_Delete_Task_given_threeTasks_when_LoadView_and_select_row_1_in_Tasks_and_click_DeleteTask_then_Tasks_has_2_rows_and_selected_row_handle_2() throws Exception {
    this.given_threeTasks();
    this.BuildSut();
    this.when_LoadView_2();
    this.when_select_row_1_in_Tasks();
    this.when_click_DeleteTask_1();
    this.then_Tasks_has_2_rows_and_selected_row_handle_2();
  }
  @Test
  public void test_Delete_Task_given_threeTasks_when_LoadView_and_select_row_2_in_Tasks_and_click_DeleteTask_then_Tasks_has_2_rows_and_selected_row_handle_1() throws Exception {
    this.given_threeTasks();
    this.BuildSut();
    this.when_LoadView_3();
    this.when_select_row_2_in_Tasks();
    this.when_click_DeleteTask_2();
    this.then_Tasks_has_2_rows_and_selected_row_handle_1_2();
  }
  @Test
  public void test_Delete_Task_given_threeTasks_when_LoadView_and_click_DeleteTask_and_click_DeleteTask_and_click_DeleteTask_then_Tasks_has_0_rows() throws Exception {
    this.given_threeTasks();
    this.BuildSut();
    this.when_LoadView_4();
    this.when_click_DeleteTask_3();
    this.when_click_DeleteTask_4();
    this.when_click_DeleteTask_5();
    this.then_Tasks_has_0_rows();
  }
  @Test
  public void test_Delete_disabled_if_nothing_selected_given_emptyTasks_when_LoadView_and_select_row_0_in_Tasks_and_click_DeleteTask_then_AddNewTask_is_enabled_and_DeleteTask_is_not_enabled() throws Exception {
    this.given_emptyTasks();
    this.BuildSut();
    this.when_LoadView_5();
    this.when_select_row_0_in_Tasks_1();
    this.when_click_DeleteTask_6();
    this.then_AddNewTask_is_enabled();
    this.then_DeleteTask_is_not_enabled();
  }
  @BeforeEach
  public void setUp() {
    this.contextProvider = new TaskListViewModelContextProviderImpl();
    this.contextProvider.Init();
  }



  protected void BuildSut() {
    this.sut = this.contextProvider.BuildSut();
  }



  public void given_oneTask() {
    this.contextProvider.SetDataTableJson(this.oneTask);
  }
  public void given_threeTasks() {
    this.contextProvider.SetDataTableJson(this.threeTasks);
  }
  public void given_emptyTasks() {
    this.contextProvider.SetDataTableJson(this.emptyTasks);
  }


  public void when_LoadView() {
    this.sut.loadView();
  }
  public void when_click_AddNewTask() {
    this.sut.addNewTaskClicked();
  }
  public void when_LoadView_1() {
    this.sut.loadView();
  }
  public void when_select_row_0_in_Tasks() {
    this.sut.tasksRowSelected("0");
  }
  public void when_click_DeleteTask() {
    this.sut.deleteTaskClicked();
  }
  public void when_LoadView_2() {
    this.sut.loadView();
  }
  public void when_select_row_1_in_Tasks() {
    this.sut.tasksRowSelected("1");
  }
  public void when_click_DeleteTask_1() {
    this.sut.deleteTaskClicked();
  }
  public void when_LoadView_3() {
    this.sut.loadView();
  }
  public void when_select_row_2_in_Tasks() {
    this.sut.tasksRowSelected("2");
  }
  public void when_click_DeleteTask_2() {
    this.sut.deleteTaskClicked();
  }
  public void when_LoadView_4() {
    this.sut.loadView();
  }
  public void when_click_DeleteTask_3() {
    this.sut.deleteTaskClicked();
  }
  public void when_click_DeleteTask_4() {
    this.sut.deleteTaskClicked();
  }
  public void when_click_DeleteTask_5() {
    this.sut.deleteTaskClicked();
  }
  public void when_LoadView_5() {
    this.sut.loadView();
  }
  public void when_select_row_0_in_Tasks_1() {
    this.sut.tasksRowSelected("0");
  }
  public void when_click_DeleteTask_6() {
    this.sut.deleteTaskClicked();
  }


  public void then_Tasks_has_2_rows_and_selected_row_handle_1() {
    List<TaskListViewModelTasksRow> actualRows = this.sut.getTasksWidgetTableRows();
    Assert.assertEquals(2, actualRows.size());
    // {
    TaskListViewModelTasksRow row0 = actualRows.get(1 - 1);
    Assert.assertEquals("0", row0.getRowHandle());
    Assert.assertEquals("A", row0.getTask_NameText());
    // }
    // {
    TaskListViewModelTasksRow row1 = actualRows.get(2 - 1);
    Assert.assertEquals("1", row1.getRowHandle());
    Assert.assertEquals("PrioMedium", row1.getPriorityImageSource());
    Assert.assertEquals("<New Task>", row1.getTask_NameText());
    Assert.assertEquals("", row1.getDue_DateText());
    // }
    Assert.assertEquals("1", this.sut.getTasksSelectedRow());
  }
  public void then_Tasks_has_2_rows_and_selected_row_handle_1_1() {
    List<TaskListViewModelTasksRow> actualRows = this.sut.getTasksWidgetTableRows();
    Assert.assertEquals(2, actualRows.size());
    // {
    TaskListViewModelTasksRow row0 = actualRows.get(1 - 1);
    Assert.assertEquals("1", row0.getRowHandle());
    Assert.assertEquals("B", row0.getTask_NameText());
    // }
    // {
    TaskListViewModelTasksRow row1 = actualRows.get(2 - 1);
    Assert.assertEquals("2", row1.getRowHandle());
    Assert.assertEquals("C", row1.getTask_NameText());
    // }
    Assert.assertEquals("1", this.sut.getTasksSelectedRow());
  }
  public void then_Tasks_has_2_rows_and_selected_row_handle_2() {
    List<TaskListViewModelTasksRow> actualRows = this.sut.getTasksWidgetTableRows();
    Assert.assertEquals(2, actualRows.size());
    // {
    TaskListViewModelTasksRow row0 = actualRows.get(1 - 1);
    Assert.assertEquals("0", row0.getRowHandle());
    Assert.assertEquals("A", row0.getTask_NameText());
    // }
    // {
    TaskListViewModelTasksRow row1 = actualRows.get(2 - 1);
    Assert.assertEquals("2", row1.getRowHandle());
    Assert.assertEquals("C", row1.getTask_NameText());
    // }
    Assert.assertEquals("2", this.sut.getTasksSelectedRow());
  }
  public void then_Tasks_has_2_rows_and_selected_row_handle_1_2() {
    List<TaskListViewModelTasksRow> actualRows = this.sut.getTasksWidgetTableRows();
    Assert.assertEquals(2, actualRows.size());
    // {
    TaskListViewModelTasksRow row0 = actualRows.get(1 - 1);
    Assert.assertEquals("0", row0.getRowHandle());
    Assert.assertEquals("A", row0.getTask_NameText());
    // }
    // {
    TaskListViewModelTasksRow row1 = actualRows.get(2 - 1);
    Assert.assertEquals("1", row1.getRowHandle());
    Assert.assertEquals("B", row1.getTask_NameText());
    // }
    Assert.assertEquals("1", this.sut.getTasksSelectedRow());
  }
  public void then_Tasks_has_0_rows() {
    List<TaskListViewModelTasksRow> actualRows = this.sut.getTasksWidgetTableRows();
    Assert.assertEquals(0, actualRows.size());
  }
  public void then_AddNewTask_is_enabled() {
    Assert.assertTrue(this.sut.getIsAddNewTaskEnabled());
  }
  public void then_DeleteTask_is_not_enabled() {
    Assert.assertFalse(this.sut.getIsDeleteTaskEnabled());
  }
}

namespace widgetassertions ;

private import Testing ;

class CheckBoxes_ViewTest {
  
  private sut : CheckBoxes_View  ;
  
  private testSetup : CheckBoxes_ViewTestSetup  ;
  
  
  protected BeforeTest (  ) {
  this.testSetup = new CheckBoxes_ViewTestSetupImpl (  );
   this.testSetup.Init (  );
 }
  
  
  public My_Scenario_given_empty_context_when_then_MyFlagWithLabel_is_checked_and_is_enabled_and_is_visible_and_shows_text_My_Label_and_MyFlagNoLabel_is_not_checked_and_MyFlagTriState_is_mixed_and_MyFlagTriState_is_checked_and_MyFlagTriState_is_not_checked (  ) {
  this.given_empty_context (  );
   this.BuildSut (  );
   this.then_MyFlagWithLabel_is_checked_and_is_enabled_and_is_visible_and_shows_text_My_Label_ (  );
   this.then_MyFlagNoLabel_is_not_checked (  );
   this.then_MyFlagTriState_is_mixed (  );
   this.then_MyFlagTriState_is_checked (  );
   this.then_MyFlagTriState_is_not_checked (  );
 }
  
  public CheckBox_disabled_given_when_then_MyFlagWithLabel_is_checked_and_is_not_enabled_and_shows_text_value_ (  ) {
  this.BuildSut (  );
   this.then_MyFlagWithLabel_is_checked_and_is_not_enabled_and_shows_text_value_ (  );
 }
  
  public CheckBox_invisible_given_when_then_MyFlagWithLabel_is_checked_and_is_not_visible_and_shows_text_test_ (  ) {
  this.BuildSut (  );
   this.then_MyFlagWithLabel_is_checked_and_is_not_visible_and_shows_text_test_ (  );
 }
  
  
  protected BuildSut (  ) {
  this.sut = this.testSetup.BuildSut (  );
 }
  
  
  // Given Helper Definitions

  
  public given_empty_context (  ) {     }
  
  // When Helper Definitions

  
  // Then Helper Definitions

  
  public then_MyFlagWithLabel_is_checked_and_is_enabled_and_is_visible_and_shows_text_My_Label_ (  ) {
  AssertTrue ( this.sut.getIsMyFlagWithLabelCheckBoxChecked (  ) );
   AssertTrue ( this.sut.getIsMyFlagWithLabelCheckBoxEnabled (  ) );
   AssertTrue ( this.sut.getIsMyFlagWithLabelCheckBoxVisible (  ) );
   AssertEqual ( "My Label", this.sut.getMyFlagWithLabelCheckBoxText (  ) );
 }
  
  public then_MyFlagNoLabel_is_not_checked (  ) {
  AssertFalse ( this.sut.getIsMyFlagNoLabelCheckBoxChecked (  ) );
 }
  
  public then_MyFlagTriState_is_mixed (  ) {
  AssertEqual ( null, this.sut.getIsMyFlagTriStateCheckBoxChecked (  ) );
 }
  
  public then_MyFlagTriState_is_checked (  ) {
  AssertTrue ( this.sut.getIsMyFlagTriStateCheckBoxChecked (  ) );
 }
  
  public then_MyFlagTriState_is_not_checked (  ) {
  AssertFalse ( this.sut.getIsMyFlagTriStateCheckBoxChecked (  ) );
 }
  
  public then_MyFlagWithLabel_is_checked_and_is_not_enabled_and_shows_text_value_ (  ) {
  AssertTrue ( this.sut.getIsMyFlagWithLabelCheckBoxChecked (  ) );
   AssertFalse ( this.sut.getIsMyFlagWithLabelCheckBoxEnabled (  ) );
   AssertEqual ( "value", this.sut.getMyFlagWithLabelCheckBoxText (  ) );
 }
  
  public then_MyFlagWithLabel_is_checked_and_is_not_visible_and_shows_text_test_ (  ) {
  AssertTrue ( this.sut.getIsMyFlagWithLabelCheckBoxChecked (  ) );
   AssertFalse ( this.sut.getIsMyFlagWithLabelCheckBoxVisible (  ) );
   AssertEqual ( "test", this.sut.getMyFlagWithLabelCheckBoxText (  ) );
 }
}
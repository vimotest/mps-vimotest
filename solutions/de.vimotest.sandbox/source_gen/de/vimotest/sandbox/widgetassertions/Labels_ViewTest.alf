namespace widgetassertions ;

private import Testing ;

class Labels_ViewTest {
  
  private sut : Labels_View  ;
  
  private contextProvider : Labels_ViewContextProvider  ;
  
  
  protected BeforeTest (  ) {
  this.contextProvider = new Labels_ViewContextProvider (  );
   this.contextProvider.Init (  );
 }
  
  
  public Single_Line_Label_given_empty_context_when_then_MyLabel_shows_text_My_Expectation_Text_and_is_enabled_and_is_visible (  ) {
  this.given_empty_context (  );
   this.BuildSut (  );
   this.then_MyLabel_shows_text_My_Expectation_Text_and_is_enabled_and_is_visible (  );
 }
  
  public Multi_Line_Label_given_empty_context_when_then_MyMultiLineLabel_shows_text_Expected_Line_1_Expected_Line_2_ (  ) {
  this.given_empty_context1 (  );
   this.BuildSut (  );
   this.then_MyMultiLineLabel_shows_text_Expected_Line_1_Expected_Line_2_ (  );
 }
  
  public ToolTip_Label_given_empty_context_when_then_MyLabelWithToolTip_shows_text_Info_and_shows_tooltip_My_Expected_Tooltip_ (  ) {
  this.given_empty_context2 (  );
   this.BuildSut (  );
   this.then_MyLabelWithToolTip_shows_text_Info_and_shows_tooltip_My_Expected_Tooltip_ (  );
 }
  
  
  protected BuildSut (  ) {
  this.sut = this.contextProvider.BuildSut (  );
 }
  
  
  // Given Helper Definitions

  
  public given_empty_context (  ) {     }
  
  public given_empty_context1 (  ) {     }
  
  public given_empty_context2 (  ) {     }
  
  // When Helper Definitions

  
  // Then Helper Definitions

  
  public then_MyLabel_shows_text_My_Expectation_Text_and_is_enabled_and_is_visible (  ) {
  AssertEqual ( "My Expectation Text", this.sut.getMyLabelText (  ) );
   AssertTrue ( this.sut.getIsMyLabelEnabled (  ) );
   AssertTrue ( this.sut.getIsMyLabelVisibility (  ) );
 }
  
  public then_MyMultiLineLabel_shows_text_Expected_Line_1_Expected_Line_2_ (  ) {
  let actualMyMultiLineLabelLines: String [] = this.sut.getMyMultiLineLabelText (  );
   AssertEqual ( 2, actualMyMultiLineLabelLines->size (  ) );
   AssertEqual ( "Expected Line 1", actualMyMultiLineLabelLines[ 1 ] ?? "" );
   AssertEqual ( "Expected Line 2", actualMyMultiLineLabelLines[ 2 ] ?? "" );
 }
  
  public then_MyLabelWithToolTip_shows_text_Info_and_shows_tooltip_My_Expected_Tooltip_ (  ) {
  AssertEqual ( "Info", this.sut.getMyLabelWithToolTipText (  ) );
   AssertEqual ( "My Expected Tooltip", this.sut.getMyLabelWithToolTipToolTip (  ) );
 }
}
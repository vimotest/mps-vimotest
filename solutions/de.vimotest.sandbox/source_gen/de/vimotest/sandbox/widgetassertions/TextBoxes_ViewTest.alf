namespace widgetassertions ;

private import Testing ;

class TextBoxes_ViewTest {
  
  private sut : TextBoxes_View  ;
  
  private testSetup : TextBoxes_ViewTestSetup  ;
  
  
  protected BeforeTest (  ) {
    this.testSetup = new TextBoxes_ViewTestSetupImpl (  );

    this.testSetup.Init (  );

  }
  
  
  public SingleLine_TextBox_given_empty_context_when_then_MyValue_shows_text_Some_entered_Input_and_is_enabled_and_is_visible (  ) {
    this.given_empty_context (  );

    this.BuildSut (  );

    this.then_MyValue_shows_text_Some_entered_Input_and_is_enabled_and_is_visible (  );

  }
  
  public SingleLine_TextBox_disabled_given_empty_context_when_then_MyValue_shows_text_Some_entered_Input_and_is_not_enabled_and_is_visible (  ) {
    this.given_empty_context (  );

    this.BuildSut (  );

    this.then_MyValue_shows_text_Some_entered_Input_and_is_not_enabled_and_is_visible (  );

  }
  
  public SingleLine_TextBox_invisible_given_empty_context_when_then_MyValue_shows_text_Some_entered_Input_and_is_enabled_and_is_not_visible (  ) {
    this.given_empty_context (  );

    this.BuildSut (  );

    this.then_MyValue_shows_text_Some_entered_Input_and_is_enabled_and_is_not_visible (  );

  }
  
  public MultiLine_TextBox_given_empty_context_when_then_MultiLineTextBoxValue_shows_text_Expected1_Expected2_ (  ) {
    this.given_empty_context (  );

    this.BuildSut (  );

    this.then_MultiLineTextBoxValue_shows_text_Expected1_Expected2_ (  );

  }
  
  
  protected BuildSut (  ) {
    this.sut = this.testSetup.BuildSut (  );

  }
  
  
  // Given Helper Definitions

  
  public given_empty_context (  ) {    
  }
  
  // When Helper Definitions

  
  // Then Helper Definitions

  
  public then_MyValue_shows_text_Some_entered_Input_and_is_enabled_and_is_visible (  ) {
    AssertEqual ( "Some entered Input", this.sut.getMyValueTextBoxText (  ) );

    AssertTrue ( this.sut.getIsMyValueTextBoxEnabled (  ) );

    AssertTrue ( this.sut.getIsMyValueTextBoxVisible (  ) );

  }
  
  public then_MyValue_shows_text_Some_entered_Input_and_is_not_enabled_and_is_visible (  ) {
    AssertEqual ( "Some entered Input", this.sut.getMyValueTextBoxText (  ) );

    AssertFalse ( this.sut.getIsMyValueTextBoxEnabled (  ) );

    AssertTrue ( this.sut.getIsMyValueTextBoxVisible (  ) );

  }
  
  public then_MyValue_shows_text_Some_entered_Input_and_is_enabled_and_is_not_visible (  ) {
    AssertEqual ( "Some entered Input", this.sut.getMyValueTextBoxText (  ) );

    AssertTrue ( this.sut.getIsMyValueTextBoxEnabled (  ) );

    AssertFalse ( this.sut.getIsMyValueTextBoxVisible (  ) );

  }
  
  public then_MultiLineTextBoxValue_shows_text_Expected1_Expected2_ (  ) {
    let actualMultiLineTextBoxValueLines: String [] = this.sut.getMultiLineTextBoxValueTextBoxText (  );

    AssertEqual ( 2, actualMultiLineTextBoxValueLines->size (  ) );

    AssertEqual ( "Expected1", actualMultiLineTextBoxValueLines[ 1 ] ?? "" );

    AssertEqual ( "Expected2", actualMultiLineTextBoxValueLines[ 2 ] ?? "" );

  }
}